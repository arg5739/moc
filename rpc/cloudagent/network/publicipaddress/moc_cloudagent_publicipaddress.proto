// Copyright (c) Microsoft Corporation.
// Licensed under the Apache v2.0 license.

syntax = "proto3";
option go_package = "github.com/microsoft/moc/rpc/cloudagent/network";
package moc.cloudagent.network;

import "google/protobuf/wrappers.proto";
import "moc_common_common.proto";
import "moc_common_networkcommon.proto";

message PublicIPAddressRequest {
	repeated PublicIPAddress PublicIPAddresses = 1;
	Operation OperationType = 2;
}

message PublicIPAddressResponse {
	repeated PublicIPAddress PublicIPAddresses = 1;
	google.protobuf.BoolValue Result = 2;
	string Error = 3;
}

message PublicIPAddressPrecheckRequest {
	repeated PublicIPAddress PublicIPAddresses = 1;
}

message PublicIPAddressPrecheckResponse {
	// The precheck result: true if the precheck criteria is passed; otherwise, false
	google.protobuf.BoolValue Result = 1;

	// The error message if the precheck is not passed; otherwise, empty string
	string Error = 2;
}

message PublicIPAddress {
	string name = 1;
	string id = 2;
	string ipAddress = 3 [(sensitive) = true];
	IPAllocationMethod allocation = 4;
	IPVersion ipVersion = 5;
    uint32 idleTimeoutInMinutes = 6;
	string groupName = 7;
	string locationName = 8;
	Status status = 9;
	Tags tags = 10;
	
	// No DNS support for now
	//string domainNameLabel = 11;
	//string fqdn = 12;
    //string reverseFqdn = 13;
}

service PublicIPAddressAgent {
	rpc Invoke(PublicIPAddressRequest) returns (PublicIPAddressResponse) {}

    // Prechecks whether the system is able to create specified public IP address (but does not actually create them).
	rpc Precheck(PublicIPAddressPrecheckRequest) returns (PublicIPAddressPrecheckResponse) {}
}
