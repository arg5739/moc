package poptoken

import (
	"time"
)

const (
	tokenType  = "token_type"
	reqCnf     = "req_cnf"
	resourceId = "resourceid"
)

// Implements the interface for MSAL SDK to callback when creating the poptoken.
// See AuthenticationScheme interface in https://github.com/AzureAD/microsoft-authentication-library-for-go/blob/main/apps/internal/oauth/ops/authority/authority.go#L146
type NodeAgentPopTokenAuthScheme struct {
	shrPopToken *ShrPopToken
	keyPair     *RsaKeyPair
	ResourceId  string
}

// Return the claim containg the pop token kid that will be added to the Entra access token.
func (a *NodeAgentPopTokenAuthScheme) TokenRequestParams() map[string]string {

	reqCnfBase64, err := a.shrPopToken.GetReqCnf()
	if err != nil {
		return map[string]string{}
	}

	return map[string]string{
		tokenType: a.shrPopToken.Header.Typ,
		reqCnf:    reqCnfBase64,
	}
}

// Return the keyId for MSAL to lookup for a cached access token. If it does not exist, MSAL will request a new access token
func (a *NodeAgentPopTokenAuthScheme) KeyID() string {
	return a.shrPopToken.Header.Kid
}

// Generate the pop token; adding in the accessToken generated by Entra.
func (a *NodeAgentPopTokenAuthScheme) FormatAccessToken(accessToken string) (string, error) {
	// append accessToken and our custom claims to the pop token.
	// Note custom claims should be compatible with JWT specs, we don't expect these claims to be complex
	customClaims := map[string]interface{}{
		resourceId: a.ResourceId}

	return a.shrPopToken.GenerateToken(accessToken, time.Now(), customClaims)
}

// Return the token type. Must be "pop"
func (a *NodeAgentPopTokenAuthScheme) AccessTokenType() string {
	return a.shrPopToken.Header.Typ
}

// Create a new instance of NodeAgentPopTokenAuthScheme. Pass in the custom claims to be set in the pop token here, e.g. resourceId
func NewNodeAgentPopTokenAuthScheme(resourceId string, rsaKeyPair *RsaKeyPair) (*NodeAgentPopTokenAuthScheme, error) {
	shrPopToken, err := NewPopToken(rsaKeyPair)
	if err != nil {
		return nil, err
	}

	return &NodeAgentPopTokenAuthScheme{
		shrPopToken: shrPopToken,
		ResourceId:  resourceId,
	}, nil
}
